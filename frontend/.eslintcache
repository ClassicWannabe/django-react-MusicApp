[{"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\index.js":"1","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\App.js":"3","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\HomePage.js":"4","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\CreateRoom.js":"5","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\JoinRoom.js":"6","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\Room.js":"7","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\MusicPlayer.js":"8"},{"size":500,"mtime":1610446575372,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":170,"mtime":1610623509703,"results":"12","hashOfConfig":"10"},{"size":1873,"mtime":1610647401156,"results":"13","hashOfConfig":"10"},{"size":5514,"mtime":1610961072128,"results":"14","hashOfConfig":"10"},{"size":1924,"mtime":1610645468759,"results":"15","hashOfConfig":"10"},{"size":4040,"mtime":1611247705573,"results":"16","hashOfConfig":"10"},{"size":1714,"mtime":1611249097844,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"1yprjum",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"20"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\index.js",[],["37","38"],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\App.js",[],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\HomePage.js",[],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\CreateRoom.js",["39"],"import {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  FormHelperText,\r\n  FormControl,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreateRoom(props) {\r\n  const defaultProps = {\r\n    votesToSkip: 2,\r\n    guestCanPause: true,\r\n    update: false,\r\n    roomCode: null,\r\n    updateCallBack: () => {},\r\n  };\r\n  const [state, setState] = useState({\r\n    guestCanPause: props.update\r\n      ? props.guestCanPause\r\n      : defaultProps.guestCanPause,\r\n    votesToSkip: props.update ? props.votesToSkip : defaultProps.votesToSkip,\r\n    errorMsg: \"\",\r\n    successMsg: \"\",\r\n  });\r\n  const handlePauseChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => {\r\n      return { ...prevState, [name]: value === \"true\" ? true : false };\r\n    });\r\n  };\r\n\r\n  const handleVotesChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  const handleCreateSubmit = () => {\r\n    const params = {\r\n      votes_to_skip: state.votesToSkip,\r\n      guest_can_pause: state.guestCanPause,\r\n    };\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/create-room\", params)\r\n      .then((res) => props.history.push(`/room/${res.data.code}`));\r\n  };\r\n\r\n  const handleUpdateSubmit = () => {\r\n    const params = {\r\n      votes_to_skip: state.votesToSkip,\r\n      guest_can_pause: state.guestCanPause,\r\n      code: props.roomCode,\r\n    };\r\n    axios.patch(\"http://127.0.0.1:8000/api/update-room\", params).then((res) => {\r\n      if (res.statusText == \"OK\") {\r\n        setState((prevValues) => {\r\n          return {\r\n            ...prevValues,\r\n            successMsg: \"Room was updated\",\r\n          };\r\n        });\r\n      } else {\r\n        setState((prevValues) => {\r\n          return {\r\n            ...prevValues,\r\n            errorMsg: \"Error updating the room\",\r\n          };\r\n        });\r\n      }\r\n      props.useCallback();\r\n    });\r\n  };\r\n\r\n  const renderCreateButtons = () => {\r\n    return (\r\n      <Grid container spacing={1} align=\"center\">\r\n        <Grid item xs={12}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleCreateSubmit}\r\n          >\r\n            Create a Room\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button color=\"secondary\" variant=\"contained\" to=\"/\" component={Link}>\r\n            Back\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const renderUpdateButtons = () => {\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={handleUpdateSubmit}\r\n        >\r\n          Update Room\r\n        </Button>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const title = props.update ? \"Update a Room\" : \"Create a Room\";\r\n  return (\r\n    <Grid container spacing={1} align=\"center\">\r\n      <Grid item xs={12}>\r\n        <Collapse in={state.errorMsg !== \"\" || state.successMsg !== \"\"}>\r\n          {state.successMsg !== \"\" ? (\r\n            <Alert\r\n              severity=\"success\"\r\n              onClose={() =>\r\n                setState((prevValues) => {\r\n                  return { ...prevValues, successMsg: \"\" };\r\n                })\r\n              }\r\n            >\r\n              {state.successMsg}\r\n            </Alert>\r\n          ) : (\r\n            <Alert\r\n              severity=\"error\"\r\n              onClose={() =>\r\n                setState((prevValues) => {\r\n                  return { ...prevValues, errorMsg: \"\" };\r\n                })\r\n              }\r\n            >\r\n              {state.errorMsg}\r\n            </Alert>\r\n          )}\r\n        </Collapse>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography component=\"h4\" variant=\"h4\">\r\n          {title}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormControl component=\"fieldset\">\r\n          <FormHelperText component=\"span\">\r\n            <div align=\"center\">Guest Control of Playback State</div>\r\n          </FormHelperText>\r\n          <RadioGroup\r\n            name=\"guestCanPause\"\r\n            onChange={handlePauseChange}\r\n            row\r\n            defaultValue={state.guestCanPause.toString()}\r\n          >\r\n            <FormControlLabel\r\n              value=\"true\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Play/Pause\"\r\n              labelPlacement=\"bottom\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"false\"\r\n              control={<Radio color=\"secondary\" />}\r\n              label=\"No Control\"\r\n              labelPlacement=\"bottom\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormControl>\r\n          <TextField\r\n            name=\"votesToSkip\"\r\n            onChange={handleVotesChange}\r\n            required={true}\r\n            type=\"number\"\r\n            defaultValue={state.votesToSkip}\r\n            inputProps={{ min: 1, style: { textAlign: \"center\" } }}\r\n          />\r\n          <FormHelperText component=\"span\">\r\n            <div align=\"center\">Votes Required to Skip Song</div>\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n      {props.update ? renderUpdateButtons() : renderCreateButtons()}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CreateRoom;\r\n","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\JoinRoom.js",[],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\Room.js",["40"],"import { Grid, Typography, Button } from \"@material-ui/core\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport CreateRoom from \"./CreateRoom\";\r\nimport MusicPlayer from \"./MusicPlayer\";\r\n\r\nfunction Room(props) {\r\n  const roomCode = props.match.params.roomCode;\r\n  const [state, setState] = useState({\r\n    votesToSkip: 2,\r\n    guestCanPause: false,\r\n    isHost: false,\r\n    showSettings: false,\r\n    spotifyAuthenticate: false,\r\n    song: [],\r\n  });\r\n\r\n  const getRoomDetails = () => {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/api/get-room?code=${roomCode}`)\r\n      .then((res) => {\r\n        if (res.statusText !== \"OK\") {\r\n          props.clearRoom();\r\n          props.history.push(\"/\");\r\n        }\r\n        return res.data;\r\n      })\r\n      .then((data) => {\r\n        setState((prevValues) => {\r\n          return {\r\n            ...prevValues,\r\n            votesToSkip: data.votes_to_skip,\r\n            guestCanPause: data.guest_can_pause,\r\n            isHost: data.is_host,\r\n          };\r\n        });\r\n        if (data.is_host) {\r\n          authenticateSpotify();\r\n        }\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getRoomDetails();\r\n    window.myInterval = setInterval(getCurrentSong, 1000);\r\n  }, []);\r\n\r\n  const leaveRoom = () => {\r\n    axios.get(`http://127.0.0.1:8000/api/leave-room`).then(() => {\r\n      props.clearRoom();\r\n      window.clearInterval(window.myInterval)\r\n      props.history.push(\"/\");\r\n    });\r\n  };\r\n\r\n  const updateShowSettings = (value) =>\r\n    setState((prevValues) => {\r\n      return {\r\n        ...prevValues,\r\n        showSettings: value,\r\n      };\r\n    });\r\n\r\n  const authenticateSpotify = () => {\r\n    axios.get(`http://127.0.0.1:8000/spotify/is-authenticated`).then((res) => {\r\n      setState((prevValues) => {\r\n        return {\r\n          ...prevValues,\r\n          spotifyAuthenticate: res.data.status,\r\n        };\r\n      });\r\n      if (!res.data.status) {\r\n        axios.get(`http://127.0.0.1:8000/spotify/get-auth-url`).then((res) => {\r\n          window.location.replace(res.data.url);\r\n        });\r\n      }\r\n    });\r\n  };\r\n\r\n  const getCurrentSong = () => {\r\n    axios\r\n      .get(`http://127.0.0.1:8000/spotify/current-song`)\r\n      .then((res) => {\r\n        if (res.statusText !== \"OK\") {\r\n          return {};\r\n        } else {\r\n          return res.data;\r\n        }\r\n      })\r\n      .then((data) => {\r\n        setState((prevValues) => {\r\n          return {\r\n            ...prevValues,\r\n            song: data,\r\n          };\r\n        });\r\n      });\r\n  };\r\n\r\n  const renderSettingsButton = () => {\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={() => updateShowSettings(true)}\r\n        >\r\n          Settings\r\n        </Button>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const renderSettings = () => {\r\n    return (\r\n      <Grid container spacing={1} align=\"center\">\r\n        <Grid item xs={12}>\r\n          <CreateRoom\r\n            update={true}\r\n            votesToSkip={state.votesToSkip}\r\n            guestCanPause={state.guestCanPause}\r\n            roomCode={roomCode}\r\n            useCallback={getRoomDetails}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={() => updateShowSettings(false)}\r\n          >\r\n            Close\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  if (state.showSettings) {\r\n    return renderSettings();\r\n  }\r\n  return (\r\n    <Grid container spacing={1} align=\"center\">\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h4\" component=\"h4\">\r\n          Code: {roomCode}\r\n        </Typography>\r\n      </Grid>\r\n      <MusicPlayer {...state.song} />\r\n      {state.isHost ? renderSettingsButton() : null}\r\n      <Grid item xs={12}>\r\n        <Button variant=\"contained\" color=\"secondary\" onClick={leaveRoom}>\r\n          Leave Room\r\n        </Button>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Room;\r\n","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\MusicPlayer.js",["41"],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":65,"column":26,"nodeType":"48","messageId":"49","endLine":65,"endColumn":28},{"ruleId":"50","severity":1,"message":"51","line":45,"column":6,"nodeType":"52","endLine":45,"endColumn":8,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":32,"column":11,"nodeType":"56","endLine":32,"endColumn":90},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getRoomDetails'. Either include it or remove the dependency array.","ArrayExpression",["59"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"60","fix":"61"},"Update the dependencies array to be: [getRoomDetails]",{"range":"62","text":"63"},[1241,1243],"[getRoomDetails]"]