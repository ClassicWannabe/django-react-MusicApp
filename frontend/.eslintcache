[{"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\index.js":"1","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\reportWebVitals.js":"2","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\App.js":"3","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\HomePage.js":"4","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\CreateRoom.js":"5","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\JoinRoom.js":"6","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\Room.js":"7"},{"size":500,"mtime":1610446575372,"results":"8","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"9"},{"size":170,"mtime":1610623509703,"results":"11","hashOfConfig":"9"},{"size":1873,"mtime":1610647401156,"results":"12","hashOfConfig":"9"},{"size":5514,"mtime":1610961072128,"results":"13","hashOfConfig":"9"},{"size":1924,"mtime":1610645468759,"results":"14","hashOfConfig":"9"},{"size":3911,"mtime":1610961532023,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1yprjum",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\index.js",[],["32","33"],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\App.js",[],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\HomePage.js",[],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\CreateRoom.js",["34"],"import {\r\n  Button,\r\n  Grid,\r\n  Typography,\r\n  TextField,\r\n  FormHelperText,\r\n  FormControl,\r\n  Radio,\r\n  RadioGroup,\r\n  FormControlLabel,\r\n  Collapse,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction CreateRoom(props) {\r\n  const defaultProps = {\r\n    votesToSkip: 2,\r\n    guestCanPause: true,\r\n    update: false,\r\n    roomCode: null,\r\n    updateCallBack: () => {},\r\n  };\r\n  const [state, setState] = useState({\r\n    guestCanPause: props.update\r\n      ? props.guestCanPause\r\n      : defaultProps.guestCanPause,\r\n    votesToSkip: props.update ? props.votesToSkip : defaultProps.votesToSkip,\r\n    errorMsg: \"\",\r\n    successMsg: \"\",\r\n  });\r\n  const handlePauseChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => {\r\n      return { ...prevState, [name]: value === \"true\" ? true : false };\r\n    });\r\n  };\r\n\r\n  const handleVotesChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setState((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  const handleCreateSubmit = () => {\r\n    const params = {\r\n      votes_to_skip: state.votesToSkip,\r\n      guest_can_pause: state.guestCanPause,\r\n    };\r\n    axios\r\n      .post(\"http://127.0.0.1:8000/api/create-room\", params)\r\n      .then((res) => props.history.push(`/room/${res.data.code}`));\r\n  };\r\n\r\n  const handleUpdateSubmit = () => {\r\n    const params = {\r\n      votes_to_skip: state.votesToSkip,\r\n      guest_can_pause: state.guestCanPause,\r\n      code: props.roomCode,\r\n    };\r\n    axios.patch(\"http://127.0.0.1:8000/api/update-room\", params).then((res) => {\r\n      if (res.statusText == \"OK\") {\r\n        setState((prevValues) => {\r\n          return {\r\n            ...prevValues,\r\n            successMsg: \"Room was updated\",\r\n          };\r\n        });\r\n      } else {\r\n        setState((prevValues) => {\r\n          return {\r\n            ...prevValues,\r\n            errorMsg: \"Error updating the room\",\r\n          };\r\n        });\r\n      }\r\n      props.useCallback();\r\n    });\r\n  };\r\n\r\n  const renderCreateButtons = () => {\r\n    return (\r\n      <Grid container spacing={1} align=\"center\">\r\n        <Grid item xs={12}>\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            onClick={handleCreateSubmit}\r\n          >\r\n            Create a Room\r\n          </Button>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Button color=\"secondary\" variant=\"contained\" to=\"/\" component={Link}>\r\n            Back\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const renderUpdateButtons = () => {\r\n    return (\r\n      <Grid item xs={12}>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"contained\"\r\n          onClick={handleUpdateSubmit}\r\n        >\r\n          Update Room\r\n        </Button>\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  const title = props.update ? \"Update a Room\" : \"Create a Room\";\r\n  return (\r\n    <Grid container spacing={1} align=\"center\">\r\n      <Grid item xs={12}>\r\n        <Collapse in={state.errorMsg !== \"\" || state.successMsg !== \"\"}>\r\n          {state.successMsg !== \"\" ? (\r\n            <Alert\r\n              severity=\"success\"\r\n              onClose={() =>\r\n                setState((prevValues) => {\r\n                  return { ...prevValues, successMsg: \"\" };\r\n                })\r\n              }\r\n            >\r\n              {state.successMsg}\r\n            </Alert>\r\n          ) : (\r\n            <Alert\r\n              severity=\"error\"\r\n              onClose={() =>\r\n                setState((prevValues) => {\r\n                  return { ...prevValues, errorMsg: \"\" };\r\n                })\r\n              }\r\n            >\r\n              {state.errorMsg}\r\n            </Alert>\r\n          )}\r\n        </Collapse>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Typography component=\"h4\" variant=\"h4\">\r\n          {title}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormControl component=\"fieldset\">\r\n          <FormHelperText component=\"span\">\r\n            <div align=\"center\">Guest Control of Playback State</div>\r\n          </FormHelperText>\r\n          <RadioGroup\r\n            name=\"guestCanPause\"\r\n            onChange={handlePauseChange}\r\n            row\r\n            defaultValue={state.guestCanPause.toString()}\r\n          >\r\n            <FormControlLabel\r\n              value=\"true\"\r\n              control={<Radio color=\"primary\" />}\r\n              label=\"Play/Pause\"\r\n              labelPlacement=\"bottom\"\r\n            />\r\n            <FormControlLabel\r\n              value=\"false\"\r\n              control={<Radio color=\"secondary\" />}\r\n              label=\"No Control\"\r\n              labelPlacement=\"bottom\"\r\n            />\r\n          </RadioGroup>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <FormControl>\r\n          <TextField\r\n            name=\"votesToSkip\"\r\n            onChange={handleVotesChange}\r\n            required={true}\r\n            type=\"number\"\r\n            defaultValue={state.votesToSkip}\r\n            inputProps={{ min: 1, style: { textAlign: \"center\" } }}\r\n          />\r\n          <FormHelperText component=\"span\">\r\n            <div align=\"center\">Votes Required to Skip Song</div>\r\n          </FormHelperText>\r\n        </FormControl>\r\n      </Grid>\r\n      {props.update ? renderUpdateButtons() : renderCreateButtons()}\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CreateRoom;\r\n","C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\JoinRoom.js",[],"C:\\Users\\Ruslan\\Desktop\\Python\\Django\\MusicApp\\frontend\\src\\Room.js",["35"],{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","severity":1,"message":"41","line":65,"column":26,"nodeType":"42","messageId":"43","endLine":65,"endColumn":28},{"ruleId":"44","severity":1,"message":"45","line":41,"column":29,"nodeType":"46","endLine":41,"endColumn":31,"suggestions":"47"},"no-native-reassign",["48"],"no-negated-in-lhs",["49"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'roomCode'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["50"],"no-global-assign","no-unsafe-negation",{"desc":"51","fix":"52"},"Update the dependencies array to be: [props, roomCode]",{"range":"53","text":"54"},[1105,1107],"[props, roomCode]"]